/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
 
class Solution {
    public:
        ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {     
            //creating new list
            ListNode newList{0};
            //getting the head of new list
            auto current = &newList;
            int carry = 0;
            
            while (l1 || l2 || carry) {
                //getting current l1 and l2 values
                auto val1 = l1? l1->val : 0, val2 = l2? l2->val : 0;
                auto sum = carry + val1 + val2;
                //finding carry
                current->next = new ListNode(sum % 10);
                carry = sum / 10;
                //iterating through l1 annd l2
                l1 = l1 ? l1->next : NULL;
                l2 = l2 ? l2->next : NULL;
                current = current->next;
            }

            return newList.next;
    }       
};
